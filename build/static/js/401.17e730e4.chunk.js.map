{"version":3,"file":"static/js/401.17e730e4.chunk.js","mappings":"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","sources":["common/components/step/Step.tsx","assets/images/IcProtectionLight.svg","common/constants/Services.constant.ts","core/services/PlansService.ts","views/pages/plans/options/plan/Plan.tsx","core/services/UserService.ts","core/hooks/AgeCalculator.ts","views/pages/plans/options/option/Option.tsx","views/pages/plans/Plans.tsx","views/pages/plans/options/summary/Summary.tsx"],"sourcesContent":["// StepComponent.tsx\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Step.css';\r\n\r\ninterface StepProps {\r\n    step: number;\r\n    label: string;\r\n    isActive: boolean;\r\n    isCompleted: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nconst Step: React.FC<StepProps> = ({ step, label, isActive, isCompleted, onClick }) => {\r\n\r\n    return (\r\n        <div className={` step ${isActive ? 'active' : ''} ${isCompleted ? 'completed step-completed' : ''}`}\r\n             onClick={onClick}>\r\n            <div className=\"step-circle\">{step}</div>\r\n            <div className=\"step-label\">{label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nStep.propTypes = {\r\n    step: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    isActive: PropTypes.bool.isRequired,\r\n    isCompleted: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Step;\r\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgIcProtectionLight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 48,\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"IcProtectionLight\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M44.9381 14.3212C45.0742 13.6315 44.9807 12.9163 44.6719 12.2848C44.3631 11.6533 43.856 11.1403 43.2281 10.8243L25.4344 1.92741C24.9885 1.70634 24.4976 1.59131 24 1.59131C23.5023 1.59131 23.0114 1.70634 22.5656 1.92741L4.77186 10.8243C4.14397 11.1403 3.63687 11.6533 3.32807 12.2848C3.01927 12.9163 2.92576 13.6315 3.06186 14.3212L5.55373 26.7768C6.57803 31.9029 9.47851 36.4623 13.6875 39.5624L14.4581 40.1249C14.5044 38.9927 14.687 37.8703 15.0019 36.7818C11.6439 34.1324 9.33989 30.3733 8.5031 26.1787L5.99998 13.7324C5.99177 13.688 5.9981 13.6421 6.01803 13.6016C6.03796 13.5611 6.07043 13.528 6.11061 13.5074L23.9044 4.61054C23.9336 4.59642 23.9656 4.58909 23.9981 4.58909C24.0306 4.58909 24.0626 4.59642 24.0919 4.61054L41.8856 13.4999C41.9258 13.5205 41.9583 13.5536 41.9782 13.5941C41.9981 13.6346 42.0044 13.6805 41.9962 13.7249L39.5044 26.1824C39.2104 27.6474 38.7355 29.0702 38.0906 30.418C38.8844 31.1578 39.5897 31.9871 40.1925 32.8893C41.2565 30.9789 42.0157 28.914 42.4425 26.7693L44.9381 14.3212Z\",\n    fill: \"url(#paint0_linear_12_155976)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M34.2994 30.2025L31.3687 28.5844C32.3166 28.0684 33.1078 27.3063 33.6588 26.3784C34.2099 25.4504 34.5005 24.3911 34.5 23.3119V20.9381C34.5 19.3468 33.8679 17.8207 32.7426 16.6955C31.6174 15.5703 30.0913 14.9381 28.5 14.9381C26.9087 14.9381 25.3826 15.5703 24.2574 16.6955C23.1321 17.8207 22.5 19.3468 22.5 20.9381V23.3119C22.4995 24.3911 22.7901 25.4504 23.3412 26.3784C23.8922 27.3063 24.6834 28.0684 25.6313 28.5844L22.7006 30.2025C20.8231 31.2389 19.2577 32.7596 18.1672 34.6062C17.0767 36.4528 16.501 38.5579 16.5 40.7025V43.5C16.5 43.8978 16.658 44.2793 16.9393 44.5606C17.2206 44.842 17.6022 45 18 45H39C39.3978 45 39.7794 44.842 40.0607 44.5606C40.342 44.2793 40.5 43.8978 40.5 43.5V40.7081C40.5 38.5626 39.9248 36.4563 38.8342 34.6086C37.7437 32.7609 36.1777 31.2394 34.2994 30.2025Z\",\n    fill: \"url(#paint1_linear_12_155976)\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_12_155976\",\n    x1: 3.00098,\n    y1: 1.59131,\n    x2: 22.4619,\n    y2: 49.3151,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.272135,\n    stopColor: \"#34263B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.658079,\n    stopColor: \"#13172C\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_12_155976\",\n    x1: 17.1279,\n    y1: 17.2974,\n    x2: 41.2816,\n    y2: 36.5807,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.35,\n    stopColor: \"#F7052D\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.85,\n    stopColor: \"#CA5AFA\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcProtectionLight);\nexport default __webpack_public_path__ + \"static/media/IcProtectionLight.04bbe2b5e45bffb607ac8e5500b99711.svg\";\nexport { ForwardRef as ReactComponent };","const URL_BASE='https://rimac-front-end-challenge.netlify.app/api'\r\nexport const URL_PLANS=`${URL_BASE}/plans.json`\r\nexport const URL_USERS=`${URL_BASE}/user.json`","import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {URL_PLANS} from \"../../common/constants/Services.constant\";\r\n\r\nconst usePlansService = () => {\r\n    const [plans, setPlans] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchPlans = async () => {\r\n            try {\r\n                const response = await axios.get<any>(URL_PLANS);\r\n                setPlans(response.data.list);\r\n            } catch (error) {\r\n                console.error('Error fetching plans:', error);\r\n            }\r\n        };\r\n\r\n        fetchPlans();\r\n\r\n        return () => {\r\n            // Cleanup function if necessary\r\n        };\r\n    }, []); // Empty dependency array to fetch data only once\r\n\r\n    return plans;\r\n};\r\n\r\nexport default usePlansService;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport imgH from \"../../../../../assets/images/IcHospitalLight.png\";\r\nimport usePlansService from \"../../../../../core/services/PlansService\";\r\n\r\ninterface Plans {\r\n    name: string,\r\n    price: number,\r\n    description: string[],\r\n    age: number\r\n}\r\n\r\ninterface PersonalProps {\r\n    edad?: number;\r\n    opcion?: string;\r\n    selectedPlan: (nuevoValor: Plans) => void;\r\n}\r\n\r\n\r\nconst Plan: React.FC<PersonalProps> = ({edad=0,opcion, selectedPlan}) => {\r\n\r\n    const [plan, setPlan] = useState([])\r\n    const dt: Plans[] = usePlansService();\r\n\r\n\r\n    const cargarPlans = () => {\r\n        let data = dt.filter((item: { age: number; }) => item.age > edad)\r\n        // @ts-ignore\r\n        setPlan(data)\r\n    }\r\n\r\n    const selectedValor = (plan: Plans) => {\r\n        selectedPlan({\r\n            ...plan,\r\n            price: opcion === '1' ? plan.price : (plan.price - plan.price * 0.05)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (dt.length > 0)\r\n            cargarPlans()\r\n    }, [dt.length > 0])\r\n\r\n\r\n    return (\r\n        <div className=\"row justify-content-center align-content-center planes-v\">\r\n            {\r\n                plan.map((plan: Plans, index: number) => (\r\n                    <div className=\"col-3\" key={index}>\r\n                        <Card style={{width: '18rem'}} className={'card-cotiza'}>\r\n                            <Card.Body>\r\n                                <div className={'d-flex justify-content-between align-items-center'}>\r\n                                    <div>\r\n                                        {plan.name === 'Plan en Casa y Clínica' ? (\r\n                                            <span className={'recomend'}>Plan recomendado</span>) : (<></>)}\r\n                                        <p className={'txt-plan-home'}>{plan.name}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <img src={imgH} alt=\"\" className=\"img-home\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <p>Costo del plan</p>\r\n                                {opcion === '2' && <p><s>{`S/${plan.price}`} antes</s></p>}\r\n                                <p>{`S/${opcion === '1' ? plan.price : (plan.price - plan.price * 0.05)} al mes`}</p>\r\n                                <ul>\r\n                                    {plan.description.map((item, i) => (\r\n                                        <li key={i} className={'txt-plans'}>\r\n                                            {item}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <p>Edad permitida: {plan.age} años</p>\r\n                                <button className={'btn-plan txt-select-plan'}\r\n                                        onClick={() => selectedValor(plan)}>Seleccionar Plan\r\n                                </button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Plan;\r\n","import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {URL_USERS} from \"../../common/constants/Services.constant\";\r\n\r\n// type Data = {\r\n//     name: string,\r\n//     lastName: string,\r\n//     birthDay: Date\r\n// };\r\n\r\nconst useUserService = () => {\r\n    const [user, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get<any>(URL_USERS);\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching user:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n\r\n        return () => {\r\n\r\n        };\r\n    }, []);\r\n\r\n    return user;\r\n};\r\n\r\nexport default useUserService;\r\n","import { useState, useMemo } from 'react';\r\n\r\nconst useAgeCalculator = (birthDate: string): number  => {\r\n    const [age, setAge] = useState<number>(0);\r\n\r\n    useMemo(() => {\r\n        if (!birthDate) {\r\n            setAge(0);\r\n            return;\r\n        }\r\n        const birthdayDate = new Date(birthDate);\r\n        const today = new Date();\r\n        const yearsDiff = today.getFullYear() - birthdayDate.getFullYear();\r\n        const isBirthdayPassed =\r\n            today.getMonth() < birthdayDate.getMonth() ||\r\n            (today.getMonth() === birthdayDate.getMonth() &&\r\n                today.getDate() < birthdayDate.getDate());\r\n\r\n        setAge(isBirthdayPassed ? yearsDiff - 1 : yearsDiff);\r\n    }, [birthDate]);\r\n\r\n    return age;\r\n};\r\n\r\nexport default useAgeCalculator;\r\n","import React from 'react';\r\nimport {Card, Form} from \"react-bootstrap\";\r\nimport imgMe from \"../../../../../assets/images/IcProtectionLight.svg\";\r\nimport imgMore from \"../../../../../assets/images/IcAddUserLight.png\";\r\nimport Plan from \"../plan/Plan\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useUserService from \"../../../../../core/services/UserService\";\r\nimport useAgeCalculator from \"../../../../../core/hooks/AgeCalculator\";\r\n\r\ninterface UserDetail {\r\n    name: string;\r\n    lastName: string;\r\n    birthDay: string;\r\n}\r\ninterface PersonalProps {\r\n    priceSelect: (nuevoValor: any) => void;\r\n}\r\n\r\nconst\r\n    Option : React.FC<PersonalProps> = ({priceSelect}) => {\r\n    const {name: firstName,birthDay}: any = useUserService();\r\n    const edad = useAgeCalculator(birthDay);\r\n    const initialValues = {\r\n        opcionC: ''\r\n\r\n    };\r\n    const validationSchema = Yup.object({\r\n        opcionC: Yup.boolean()\r\n            .oneOf([true], 'Debe aceptar los términos de Política Comunicaciones Comerciales'),\r\n    });\r\n\r\n        const seleccionarValor = (nuevoValor:any) => {\r\n            // console.log(nuevoValor)\r\n            priceSelect(nuevoValor)\r\n        };\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        onSubmit: values => {\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center align-content-center\">\r\n                <div className=\"col-12\">\r\n                    <p className={'txt-principal'}>{firstName} ¿Para quién deseas cotizar?</p>\r\n                    <p className={'txt-principal2'}>Selecciona opción que se ajuste más a tus necesidades</p>\r\n                </div>\r\n                <div className=\"col-3 col-offset-3\">\r\n                    <Card style={{width: '18rem'}} className={'card-cotiza'}>\r\n                        <Card.Body>\r\n                            <div className={'d-flex justify-content-between align-items-cente'}>\r\n                                <div>\r\n                                    <img src={imgMe} alt=\"Para mí\"/>\r\n                                </div>\r\n                                <div className=\"ml-auto\">\r\n                                    <Form.Check\r\n                                        type='radio'\r\n                                        name='opcionC'\r\n                                        id='id2'\r\n                                        className='fw-bold'\r\n                                        checked={formik.values.opcionC === '1'}\r\n                                        value={'1'}\r\n                                        onChange={(e) => {\r\n                                            formik.setFieldValue('opcionC', '1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <p className={'txt-tplans'}>Para mí</p>\r\n                            <p className={'txt-plans'}>\r\n                                Cotiza tu seguro de salud y agrega familiares si así lo deseas.\r\n                            </p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <Card style={{width: '18rem'}} className={'card-cotiza'}>\r\n                        <Card.Body>\r\n                            <div className={'d-flex justify-content-between align-items-cente'}>\r\n                                <div>\r\n                                    <img src={imgMore} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"ml-auto\">\r\n                                    <Form.Check\r\n                                        type='radio'\r\n                                        name='opcionC'\r\n                                        id='id1'\r\n                                        className='fw-bold'\r\n                                        value={'2'}\r\n                                        checked={formik.values.opcionC === '2'}\r\n                                        onChange={(e) => {\r\n                                            formik.setFieldValue('opcionC', '2')\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <p className={'txt-tplans'}>Para alguien más</p>\r\n                            <p className={'txt-plans'}>Realiza una cotización para uno de tus familiares o cualquier\r\n                                persona.</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n            {formik.values?.opcionC && (\r\n                <Plan edad={edad} opcion={formik.values.opcionC} selectedPlan={seleccionarValor} />\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Option;\r\n","import React, {useState} from 'react';\r\nimport Step from \"../../../common/components/step/Step\";\r\nimport './Plans.css';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Option from \"./options/option/Option\";\r\nimport Summary from \"./options/summary/Summary\";\r\nimport {useSelector} from 'react-redux';\r\nimport useUserService from \"../../../core/services/UserService\";\r\n\r\nconst Plans: React.FC<any> = () => {\r\n    const [option, setOption] = useState(0)\r\n    const [data, setData] = useState({})\r\n    const datosPersona = useSelector((state: any) => state.data);\r\n    const {name: firstName, lastName: lastName, birthDay}: any = useUserService();\r\n\r\n    const [steps, setSteps] = useState([\r\n        {step: 1, label: 'Planes y coberturas         ....', isActive: true, isCompleted: false},\r\n        {step: 2, label: 'Resumen', isActive: false, isCompleted: false},\r\n    ]);\r\n\r\n    const handleStepClick = (index: number) => {\r\n        const updatedSteps = steps.map((step, i) => ({\r\n            ...step,\r\n            isActive: i === index,\r\n            isCompleted: i < index,\r\n        }));\r\n\r\n        setSteps(updatedSteps);\r\n        setOption(index)\r\n\r\n    };\r\n\r\n    const selectPrice = (val: any) => {\r\n        const persona = datosPersona.data[0];\r\n        setOption(1)\r\n        setData({\r\n            namePlan: val.name,\r\n            price: val.price,\r\n            name: `${firstName} ${lastName}`,\r\n            dni: persona?.documento,\r\n            celular: persona?.telefono\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"step-container\">\r\n                {steps.map((step, index) => (\r\n                    <Step\r\n                        key={index}\r\n                        step={step.step}\r\n                        label={step.label}\r\n                        isActive={step.isActive}\r\n                        isCompleted={step.isCompleted}\r\n                        onClick={() => handleStepClick(index)}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {(option === 0) ? (<>\r\n                <Option priceSelect={selectPrice}/>\r\n            </>) : (option === 1) ? (<>\r\n                <Summary datos={data}/>\r\n            </>) : (<></>)}\r\n        </>);\r\n};\r\n\r\nexport default Plans;\r\n","import React from 'react';\r\nimport {Card, Row} from \"react-bootstrap\";\r\n\r\ninterface SumaryProps {\r\n    datos?: any;\r\n}\r\nconst Summary: React.FC<SumaryProps> = ({datos}) => {\r\n\r\n    return (\r\n        <>\r\n            {/*<Row>*/}\r\n                <div className=\"row justify-content-center align-content-center\">\r\n\r\n                    <div className=\"col-8\">\r\n                        <p className={'resumen-seguro'}>Resumen del seguro</p>\r\n                        <Card style={{width: '20rem'}} className={'card-cotiza'}>\r\n                            <Card.Body>\r\n                                <p>PRECIOS CALCULADOS PARA:</p>\r\n                                <i className={'fa fa-users'}></i> {datos.name}\r\n                                <hr/>\r\n                                <h5>Responsable de pago</h5>\r\n                                <p>DNI:{datos.dni}</p>\r\n                                <p>Celular:{datos.celular}</p>\r\n                                <br/>\r\n                                <h5>Plan elegido</h5>\r\n                                <p>{datos.namePlan}</p>\r\n                                <p>Costo del Plan: {datos.price} al mes</p>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            {/*</Row>*/}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n"],"names":["_ref","step","label","isActive","isCompleted","onClick","_jsxs","className","concat","children","_jsx","URL_BASE","URL_PLANS","URL_USERS","usePlansService","plans","setPlans","useState","useEffect","async","response","axios","get","data","list","error","console","fetchPlans","edad","opcion","selectedPlan","plan","setPlan","dt","length","cargarPlans","filter","item","age","map","index","Card","style","width","Body","name","_Fragment","src","alt","price","description","i","selectedValor","useUserService","user","setUser","fetchUsers","birthDate","setAge","useMemo","birthdayDate","Date","today","yearsDiff","getFullYear","isBirthdayPassed","getMonth","getDate","_formik$values","priceSelect","firstName","birthDay","useAgeCalculator","validationSchema","Yup","opcionC","oneOf","formik","useFormik","enableReinitialize","initialValues","onSubmit","values","imgMe","Form","Check","type","id","checked","value","onChange","e","setFieldValue","Plan","nuevoValor","Plans","option","setOption","setData","datosPersona","useSelector","state","lastName","steps","setSteps","Step","updatedSteps","handleStepClick","Option","val","persona","namePlan","dni","documento","celular","telefono","Summary","datos"],"sourceRoot":""}